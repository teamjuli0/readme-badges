{"version":3,"sources":["state/action-creators/search.js","state/action-creators/choices.js","components/navbar/images/logo-round-dark.png","components/navbar/images/logo-square-dark.png","components/navbar/index.js","views/home.js","state/reducers/searchReducer.js","themes/index.js","state/reducers/choicesReducer.js","state/reducers/index.js","state/store.js","App.js","reportWebVitals.js","index.js"],"names":["updateSearch","text","dispatch","type","payload","updateChoices","array","updateCurrentChoice","object","Navbar","inputEl","useRef","choices","useSelector","state","useDispatch","bindActionCreators","actionCreators","className","alt","src","LogoRound","ref","onChange","input","current","value","filter","choice","name","includes","LogoSquare","Home","stateChoices","currentChoice","filteredChoices","style","minHeight","backgroundColor","display","justifyContent","alignItems","width","maxWidth","padding","category","margin","border","borderRadius","fontWeight","color","onClick","navigator","clipboard","writeText","background","flexWrap","map","item","height","initialState","reducer","action","updatedSearch","persistent","themes","technologies","Categories","Technologies","updatedChoices","updatedChoice","reducers","combineReducers","search","searchReducer","choicesReducer","store","createStore","applyMiddleware","thunk","App","fontFamily","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8d23900.chunk.js","sourcesContent":["export const updateSearch = (text) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'updateSearch',\n      payload: text,\n    })\n  }\n}\n","export const updateChoices = (array) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'updateChoices',\n      payload: array,\n    })\n  }\n}\n\nexport const updateCurrentChoice = (object) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'updateCurrentChoice',\n      payload: object,\n    })\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo-round-dark.ef61c086.png\";","export default __webpack_public_path__ + \"static/media/logo-square-dark.0b2c30a7.png\";","import { useRef } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../../state'\nimport { LogoRound, LogoSquare } from './images'\nimport './style.css'\n\nconst Navbar = () => {\n  const inputEl = useRef()\n  const choices = useSelector((state) => state.choices.choices)\n\n  const dispatch = useDispatch()\n  const { updateSearch, updateChoices } = bindActionCreators(\n    actionCreators,\n    dispatch\n  )\n\n  const filterChoices = (input) => {\n    return choices.filter((choice) => {\n      if (choice.name.includes(input)) {\n        return true\n      }\n      return false\n    })\n  }\n\n  return (\n    <>\n      <nav>\n        <div>\n          <div className='nav-icon-div'>\n            <img alt='Readme Badges Logo' src={LogoRound} />\n          </div>\n          <div className='nav-input-div'>\n            <div>\n              <i className='fas fa-search'></i>\n            </div>\n            <input\n              ref={inputEl}\n              onChange={() => {\n                updateSearch(inputEl.current.value)\n                updateChoices(filterChoices(inputEl.current.value))\n              }}\n            />\n          </div>\n          <div className='nav-title-div'>\n            <img alt='Readme Badtges Logo Square' src={LogoSquare} />\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Navbar\n","import { bindActionCreators } from 'redux'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionCreators } from '../state'\n\nconst Home = () => {\n  const stateChoices = useSelector((state) => state.choices)\n  const { currentChoice, filteredChoices } = stateChoices\n\n  const dispatch = useDispatch()\n\n  const { updateCurrentChoice } = bindActionCreators(actionCreators, dispatch)\n\n  return (\n    <>\n      <div\n        style={{\n          minHeight: '400px',\n          backgroundColor: '#434850',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: '1000px',\n        }}\n      >\n        <div>\n          <img\n            style={{\n              padding: '0 30px',\n              width: '100%',\n              maxWidth: '550px',\n            }}\n            alt=''\n            src={`https://github.com/teamjuli0/readme-badges/blob/main/themes/clean-dark/${currentChoice.category}/${currentChoice.name}.png?raw=true`}\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          padding: '10px',\n        }}\n      >\n        <button\n          style={{\n            backgroundColor: '#434850',\n            padding: '5px 10px',\n            margin: 0,\n            border: 0,\n            borderRadius: '10px',\n            fontWeight: 'bold',\n            color: 'white',\n          }}\n          onClick={() => {\n            navigator.clipboard.writeText(\n              `## <a href=\"#readme-badge\"><img id=\"usage\" src=\"https://github.com/teamjuli0/readme-badges/blob/main/themes/clean-dark/${currentChoice.category}/${currentChoice.name}.png?raw=true\" style=\"height: 40px\"></a>\n              `\n            )\n          }}\n        >\n          Copy Markdown\n        </button>\n      </div>\n      <div\n        style={{\n          background: 'transparent',\n          margin: 'auto',\n          display: 'flex',\n          maxWidth: '800px',\n          flexWrap: 'wrap',\n          padding: '10px',\n        }}\n      >\n        {filteredChoices.map((item) => (\n          <img\n            onClick={() =>\n              updateCurrentChoice({ name: item.name, category: item.category })\n            }\n            alt=''\n            style={{ height: '45px', padding: '6px' }}\n            src={`https://github.com/teamjuli0/readme-badges/blob/main/themes/clean-dark/${item.category}/${item.name}.png?raw=true`}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","const initialState = {\n  'search-string': '',\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'updateSearch':\n      const updatedSearch = { ...state, persistent: action.payload }\n      return updatedSearch\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const ReadmeBadges = {\n  themes: ['clean-dark'],\n  choices: {\n    'menu-categories': [\n      'about',\n      'authors',\n      'built-using',\n      'installing',\n      'learned-technologies',\n      'questions',\n      'questions-alt',\n      'screenshots',\n      'table-of-context',\n      'usage',\n    ],\n    technologies: [\n      'bootstrap',\n      'chrome-extension',\n      'css',\n      'expressjs',\n      'git',\n      'html',\n      'javascript',\n      'jquery',\n      'linux',\n      'mongodb',\n      'mongoose',\n      'mysql',\n      'nodejs',\n      'nosql',\n      'react-native',\n      'reactjs',\n      'sequelize',\n    ],\n  },\n}\n\nexport default ReadmeBadges\n","import ReadmeBadges from '../../themes'\n\nconst { 'menu-categories': Categories, technologies: Technologies } =\n  ReadmeBadges.choices\n\nconst choices = [\n  ...Categories.map((item) => ({ name: item, category: 'menu-categories' })),\n  ...Technologies.map((item) => ({\n    name: item,\n    category: 'technologies',\n  })),\n]\n\nconst initialState = {\n  choices: choices,\n  filteredChoices: choices,\n  currentChoice: {\n    name: 'javascript',\n    category: 'technologies',\n  },\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'updateChoices':\n      const updatedChoices = { ...state, filteredChoices: action.payload }\n      return updatedChoices\n    case 'updateCurrentChoice': {\n      const updatedChoice = { ...state, currentChoice: action.payload }\n      return updatedChoice\n    }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport searchReducer from './searchReducer'\nimport choicesReducer from './choicesReducer'\n\nconst reducers = combineReducers({\n  search: searchReducer,\n  choices: choicesReducer,\n})\n\nexport default reducers\n","import { createStore, applyMiddleware } from 'redux'\nimport reducers from './reducers'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk))\n","import './App.css'\nimport { Navbar } from './components'\nimport { Home } from './views'\nimport { Provider } from 'react-redux'\nimport { store } from './state/store'\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <div\n          style={{\n            width: '100%',\n            height: '48px',\n            padding: '0 0 0 10px',\n            backgroundColor: '#da4040',\n            fontFamily: 'NotoSans',\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: '30px',\n          }}\n        >\n          ALPHA BUILD\n        </div>\n        <Navbar />\n        <Home />\n      </Provider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './fonts/Poppins/index.css'\nimport './fonts/Pacifico/index.css'\nimport './fonts/Noto_Sans/index.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}